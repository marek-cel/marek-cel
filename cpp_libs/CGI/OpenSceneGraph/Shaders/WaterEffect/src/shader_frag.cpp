char shader_frag[] = "uniform sampler2D defaultTex;\n"
                     "uniform sampler2D reflection;\n"
                     "uniform sampler2D refraction;\n"
                     "uniform sampler2D normalTex;\n"
                     "varying vec4 projCoords;\n"
                     "varying vec3 lightDir, eyeDir;\n"
                     "varying vec2 flowCoords, rippleCoords;\n"
                     "\n"
                     "void main()\n"
                     "{\n"
                     "   vec2 rippleEffect = 0.02 * texture2D(refraction, rippleCoords * 0.1).xy;\n"
                     "   vec4 N = texture2D(normalTex, flowCoords + rippleEffect);\n"
                     "   N = N * 2.0 - vec4(1.0);\n"
                     "   N.a = 1.0; N = normalize(N);\n"
                     "\n"
                     "   vec3 refVec = normalize(reflect(-lightDir, vec3(N) * 0.6));\n"
                     "   float refAngle = clamp(dot(eyeDir, refVec), 0.0, 1.0);\n"
                     "   vec4 specular = vec4(pow(refAngle, 40.0));\n"
                     "\n"
                     "   vec2 dist = texture2D(refraction, flowCoords + rippleEffect).xy;\n"
                     "   dist = (dist * 2.0 - vec2(1.0)) * 0.1;\n"
                     "   vec2 uv = projCoords.xy / projCoords.w;\n"
                     "   uv = clamp((uv + 1.0) * 0.5 + dist, 0.0, 1.0);\n"
                     "\n"
                     "   vec4 base = texture2D(defaultTex, uv);\n"
                     "   vec4 refl = texture2D(reflection, uv);\n"
                     "   gl_FragColor = mix(base, refl + specular, 0.6);\n"
                     "}\n"
                     "\n";
