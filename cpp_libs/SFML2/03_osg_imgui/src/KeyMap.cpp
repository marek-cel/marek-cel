#include <KeyMap.h>

osgGA::GUIEventAdapter::KeySymbol convertKeyFromSfmlToOsg(sf::Keyboard::Key key)
{
    switch (key)
    {
        case sf::Keyboard::A:         return osgGA::GUIEventAdapter::KEY_A;
        case sf::Keyboard::B:         return osgGA::GUIEventAdapter::KEY_B;
        case sf::Keyboard::C:         return osgGA::GUIEventAdapter::KEY_C;
        case sf::Keyboard::D:         return osgGA::GUIEventAdapter::KEY_D;
        case sf::Keyboard::E:         return osgGA::GUIEventAdapter::KEY_E;
        case sf::Keyboard::F:         return osgGA::GUIEventAdapter::KEY_F;
        case sf::Keyboard::G:         return osgGA::GUIEventAdapter::KEY_G;
        case sf::Keyboard::H:         return osgGA::GUIEventAdapter::KEY_H;
        case sf::Keyboard::I:         return osgGA::GUIEventAdapter::KEY_I;
        case sf::Keyboard::J:         return osgGA::GUIEventAdapter::KEY_J;
        case sf::Keyboard::K:         return osgGA::GUIEventAdapter::KEY_K;
        case sf::Keyboard::L:         return osgGA::GUIEventAdapter::KEY_L;
        case sf::Keyboard::M:         return osgGA::GUIEventAdapter::KEY_M;
        case sf::Keyboard::N:         return osgGA::GUIEventAdapter::KEY_N;
        case sf::Keyboard::O:         return osgGA::GUIEventAdapter::KEY_O;
        case sf::Keyboard::P:         return osgGA::GUIEventAdapter::KEY_P;
        case sf::Keyboard::Q:         return osgGA::GUIEventAdapter::KEY_Q;
        case sf::Keyboard::R:         return osgGA::GUIEventAdapter::KEY_R;
        case sf::Keyboard::S:         return osgGA::GUIEventAdapter::KEY_S;
        case sf::Keyboard::T:         return osgGA::GUIEventAdapter::KEY_T;
        case sf::Keyboard::U:         return osgGA::GUIEventAdapter::KEY_U;
        case sf::Keyboard::V:         return osgGA::GUIEventAdapter::KEY_V;
        case sf::Keyboard::W:         return osgGA::GUIEventAdapter::KEY_W;
        case sf::Keyboard::X:         return osgGA::GUIEventAdapter::KEY_X;
        case sf::Keyboard::Y:         return osgGA::GUIEventAdapter::KEY_Y;
        case sf::Keyboard::Z:         return osgGA::GUIEventAdapter::KEY_Z;
        case sf::Keyboard::Num0:      return osgGA::GUIEventAdapter::KEY_0;
        case sf::Keyboard::Num1:      return osgGA::GUIEventAdapter::KEY_1;
        case sf::Keyboard::Num2:      return osgGA::GUIEventAdapter::KEY_2;
        case sf::Keyboard::Num3:      return osgGA::GUIEventAdapter::KEY_3;
        case sf::Keyboard::Num4:      return osgGA::GUIEventAdapter::KEY_4;
        case sf::Keyboard::Num5:      return osgGA::GUIEventAdapter::KEY_5;
        case sf::Keyboard::Num6:      return osgGA::GUIEventAdapter::KEY_6;
        case sf::Keyboard::Num7:      return osgGA::GUIEventAdapter::KEY_7;
        case sf::Keyboard::Num8:      return osgGA::GUIEventAdapter::KEY_8;
        case sf::Keyboard::Num9:      return osgGA::GUIEventAdapter::KEY_9;
        case sf::Keyboard::Escape:    return osgGA::GUIEventAdapter::KEY_Escape;
        case sf::Keyboard::LControl:  return osgGA::GUIEventAdapter::KEY_Control_L;
        case sf::Keyboard::LShift:    return osgGA::GUIEventAdapter::KEY_Shift_L;
        case sf::Keyboard::LAlt:      return osgGA::GUIEventAdapter::KEY_Alt_L;
        case sf::Keyboard::LSystem:   return osgGA::GUIEventAdapter::KEY_Meta_L;
        case sf::Keyboard::RControl:  return osgGA::GUIEventAdapter::KEY_Control_R;
        case sf::Keyboard::RShift:    return osgGA::GUIEventAdapter::KEY_Shift_R;
        case sf::Keyboard::RAlt:      return osgGA::GUIEventAdapter::KEY_Alt_R;
        case sf::Keyboard::RSystem:   return osgGA::GUIEventAdapter::KEY_Meta_R;
        case sf::Keyboard::Menu:      return osgGA::GUIEventAdapter::KEY_Menu;
        case sf::Keyboard::LBracket:  return osgGA::GUIEventAdapter::KEY_Leftbracket;
        case sf::Keyboard::RBracket:  return osgGA::GUIEventAdapter::KEY_Rightbracket;
        case sf::Keyboard::Semicolon: return osgGA::GUIEventAdapter::KEY_Semicolon;
        case sf::Keyboard::Comma:     return osgGA::GUIEventAdapter::KEY_Comma;
        case sf::Keyboard::Period:    return osgGA::GUIEventAdapter::KEY_Period;
        case sf::Keyboard::Quote:     return osgGA::GUIEventAdapter::KEY_Quote;
        case sf::Keyboard::Slash:     return osgGA::GUIEventAdapter::KEY_Slash;
        case sf::Keyboard::Backslash: return osgGA::GUIEventAdapter::KEY_Backslash;
        //case sf::Keyboard::Tilde:     return osgGA::GUIEventAdapter::KEY_Tilde;
        case sf::Keyboard::Equal:     return osgGA::GUIEventAdapter::KEY_Equals;
        case sf::Keyboard::Hyphen:    return osgGA::GUIEventAdapter::KEY_Minus;
        case sf::Keyboard::Space:     return osgGA::GUIEventAdapter::KEY_Space;
        case sf::Keyboard::Enter:     return osgGA::GUIEventAdapter::KEY_Return;
        case sf::Keyboard::Backspace: return osgGA::GUIEventAdapter::KEY_BackSpace;
        case sf::Keyboard::Tab:       return osgGA::GUIEventAdapter::KEY_Tab;
        case sf::Keyboard::PageUp:    return osgGA::GUIEventAdapter::KEY_Page_Up;
        case sf::Keyboard::PageDown:  return osgGA::GUIEventAdapter::KEY_Page_Down;
        case sf::Keyboard::End:       return osgGA::GUIEventAdapter::KEY_End;
        case sf::Keyboard::Home:      return osgGA::GUIEventAdapter::KEY_Home;
        case sf::Keyboard::Insert:    return osgGA::GUIEventAdapter::KEY_Insert;
        case sf::Keyboard::Delete:    return osgGA::GUIEventAdapter::KEY_Delete;
        case sf::Keyboard::Add:       return osgGA::GUIEventAdapter::KEY_KP_Add;
        case sf::Keyboard::Subtract:  return osgGA::GUIEventAdapter::KEY_KP_Subtract;
        case sf::Keyboard::Multiply:  return osgGA::GUIEventAdapter::KEY_KP_Multiply;
        case sf::Keyboard::Divide:    return osgGA::GUIEventAdapter::KEY_KP_Divide;
        case sf::Keyboard::Left:      return osgGA::GUIEventAdapter::KEY_Left;
        case sf::Keyboard::Right:     return osgGA::GUIEventAdapter::KEY_Right;
        case sf::Keyboard::Up:        return osgGA::GUIEventAdapter::KEY_Up;
        case sf::Keyboard::Down:      return osgGA::GUIEventAdapter::KEY_Down;
        case sf::Keyboard::Numpad0:   return osgGA::GUIEventAdapter::KEY_KP_0;
        case sf::Keyboard::Numpad1:   return osgGA::GUIEventAdapter::KEY_KP_1;
        case sf::Keyboard::Numpad2:   return osgGA::GUIEventAdapter::KEY_KP_2;
        case sf::Keyboard::Numpad3:   return osgGA::GUIEventAdapter::KEY_KP_3;
        case sf::Keyboard::Numpad4:   return osgGA::GUIEventAdapter::KEY_KP_4;
        case sf::Keyboard::Numpad5:   return osgGA::GUIEventAdapter::KEY_KP_5;
        case sf::Keyboard::Numpad6:   return osgGA::GUIEventAdapter::KEY_KP_6;
        case sf::Keyboard::Numpad7:   return osgGA::GUIEventAdapter::KEY_KP_7;
        case sf::Keyboard::Numpad8:   return osgGA::GUIEventAdapter::KEY_KP_8;
        case sf::Keyboard::Numpad9:   return osgGA::GUIEventAdapter::KEY_KP_9;
        case sf::Keyboard::F1:        return osgGA::GUIEventAdapter::KEY_F1;
        case sf::Keyboard::F2:        return osgGA::GUIEventAdapter::KEY_F2;
        case sf::Keyboard::F3:        return osgGA::GUIEventAdapter::KEY_F3;
        case sf::Keyboard::F4:        return osgGA::GUIEventAdapter::KEY_F4;
        case sf::Keyboard::F5:        return osgGA::GUIEventAdapter::KEY_F5;
        case sf::Keyboard::F6:        return osgGA::GUIEventAdapter::KEY_F6;
        case sf::Keyboard::F7:        return osgGA::GUIEventAdapter::KEY_F7;
        case sf::Keyboard::F8:        return osgGA::GUIEventAdapter::KEY_F8;
        case sf::Keyboard::F9:        return osgGA::GUIEventAdapter::KEY_F9;
        case sf::Keyboard::F10:       return osgGA::GUIEventAdapter::KEY_F10;
        case sf::Keyboard::F11:       return osgGA::GUIEventAdapter::KEY_F11;
        case sf::Keyboard::F12:       return osgGA::GUIEventAdapter::KEY_F12;
        case sf::Keyboard::F13:       return osgGA::GUIEventAdapter::KEY_F13;
        case sf::Keyboard::F14:       return osgGA::GUIEventAdapter::KEY_F14;
        case sf::Keyboard::F15:       return osgGA::GUIEventAdapter::KEY_F15;
        case sf::Keyboard::Pause:     return osgGA::GUIEventAdapter::KEY_Pause;
        default:                      return static_cast<osgGA::GUIEventAdapter::KeySymbol>(-1);
    }

    return static_cast<osgGA::GUIEventAdapter::KeySymbol>(-1);
}